pro mm_corr_zmn, m_tot, m_astron, azmidpntn, zamidpntn, stokesc1, npos, $
                 M_SKYCORR=m_skycorr, M_ASTRO=m_astro, antlat=antlat, $
                 parallactic=parallactic

;+
; NAME:
;       MM_CORR_ZMN
; 
; PURPOSE: 
;       Mueller-correct the stokesc1 array IN PLACE. This is the primary
;       data generated by CROSS3_GENCAL.
;
; CALLING SEQUENCE:
;
;	MM_CORR_ZMN, m_tot, m_astron, azmidpntn, zamidpntn, stokesc1, npos, $
;                 M_SKYCORR=m_skycorr, M_ASTRO=m_astro, antlat=antlat, $
;                 parallactic=parallactic
;
; INPUTS:
;
;       M_TOT: the mueller matrix for the system as defined in the AOTM
;
;       M_ASTRON:
;
;	AZMIDPNTN[npos], ZAMIDPNTN[npos], the arrays of az and za.
;
;	STOKESC1[ nchan, 4, npos]: the array of all-stokes data that will
;         be in-place corrected. The 4 second indices are I,Q,U,V (in order).
;
;       NPOS, the nr of all-stokes spectra (also equal to the nr of
;               positions, i.e. the nr of az and za.
;
; KEYWORDS:
;
;       M_SKYCORR, setting it includes the sky correction; default is zero.
;       M_ASTRO, setting it includes the ASTRON correction; default is
;               zero.  
;       ANTLAT (a scalar) is the telescopes terrestrial latitude and
;               MUST be included.
;       PARALLACTIC, pass back the parallactic (calculated herein) if you
                 ;       want. Units are degrees.
;
; OUTPUTS:
;
;	STOKESC1: the corrected data. (stokesc1 is corrected in-place)
;
; MODIFICATION HISTORY:
;22 jul 2008, carl replaced pangle with parangle
;08jun2009, carl updated documentation.
;2010-11-29, carl changed 'parang' to 'parallactic'
;-

eq2az, hamidpntn, decmidpntn, azmidpntn, zamidpntn, antlat, /reverse
parallactic= parangle( hamidpntn, decmidpntn, antlat)
;pa= (pangle( azmidpntn, zamidpntn, 1))
;pa1= (pangle( azmidpntn, zamidpntn, 1))
;stop
pa= !dtor* parallactic

m_total= fltarr( 4, 4, npos, /NOZERO)

;CALCULATE M_SKY...IF DESIRED...
IF KEYWORD_SET( M_SKYCORR) THEN BEGIN

   m_sky = fltarr( 4, 4, npos)
   m_sky[ 0,0, *] = 1.
   m_sky[ 3,3, *] = 1.
   m_sky[ 1,1, *] = cos( 2.* pa)
   m_sky[ 2,1, *] = sin( 2.* pa)
   m_sky[ 2,2, *] =  m_sky[ 1, 1, *]
   m_sky[ 1,2, *] = -m_sky[ 2, 1, *]
   
   for nr=0L, npos-1L do $
      m_total[ *,*,nr] = m_tot ## m_sky[ *,*,nr]

ENDIF ELSE for nr=0L, npos-1L do m_total[ *,*,nr]= m_tot

; DON'T FORGET TO TAKE THE INVERSE!!!
for nr=0L, npos-1L do $
   m_total[ *,*,nr]= invert( m_total[ *,*,nr])

; THEN ROTATE TO ASTRONOMICAL PS IF DESIRED...
if keyword_set( m_astro) then $
   for nr=0L, npos-1L do m_total[ *,*,nr]= m_astron ## m_total[ *,*,nr]

; SHORT WAY...
for nr=0L, npos-1L do begin
   ;if nr eq 63 then stop
   ;print, m_total[*,*,nr]
   stokesc1[ *,*,nr]= m_total[ *,*,nr] ## stokesc1[ *,*,nr]
endfor

end ; mm_corr_zmn
