notes on idl color processing of images.


8bit pseudo color also called indexed color since the 8 bit number in the
			image is used to index the the r[256],g[256],b[256] tables

framebuffer 8bit --> 8 bits at each pixel
		   24bit --> 24 bits at each pixel.

24bit frame buffers:
	-are also called true color or direct color.
	-decomposed color:
		given a 24 bit image value, break it up into 3 8 bit values 
			0xbbggrr .. rr indexes into the red[256] lut
						gg indexes into the green[256] lut
						bb indexes into the blue[256] lut


------------------------------------------------------------------------------
8bit pseudo color
------------------------------------------------------------------------------
			users image    lut    framebuf     lut    d/A   
							  

8bit pseudo   8bits               8bit val,i   r[i]   ->
8bit framebuf                                  g[i]   ->
                                               b[i]   ->
			  changing lut, will change the output.

------------------------------------------------------------------------------
24bitframe buf  display directcolor 
.............................................................................
decomposedcolor users image    lut    framebuf            d/A
(true color?)
24bitimage	    0xbbggrr    r[rr]  -> low 8          -> 
			                g[gg]  -> mid 8          ->
			                b[bb]  -> hi  8          ->
            you can now access, r,g,b lut separately
			changing the lut does not update the image since the write into
			the frame buffer only occurs when you issue the plot command.

8bitimage	    0xii        r[ii]  -> low 8          -> 
			                g[ii]  -> mid 8          ->
			                b[ii]  -> hi  8          ->
				or? This may  be what is really happening
8bitimage	    0xii        r[ii]  -> low 8          -> 
						    r[ii]  -> mid 8
						    r[ii]  -> hi  8

.............................................................................
undecomposedcolor users image    lut    framebuf            d/A
			      0xii      r[ii]  -> low 8          -> 
			                g[ii]  -> mid 8          ->
			                b[ii]  -> hi  8          ->
            you can access, r,g,b lut using the same index. Users image is 
			8 bits.  changing the lut does not update the image since the
			write into the frame buffer only occurs when you issue the 
			plot command.

device,decomposed=0/1 switches between decomposed,composed.

For color tables to work on a 24bit display you need to turn decomposed color
off.

idl color commands:
device keywords:
  colors=n .. number of colors in lookup table.
  decomposed=0,1   used with true or direct color visuals
                   1- color indices are 3 8 bit values one for each gun
				   0- least significant 8 bits interpretted as index into lut.
				      can be used with true or direct color graphics
  DIRECTCOLOR=npixels   use direct color nbits
  truecolor=npixels     use truecolor nbits

  asking for a visual that idl does not support leaves visual undefined

  the sequence 
     device,direct_color=24    no error, but xserver did not support it..
	 device,decomposed=0       This caused:
	 % Unsupported X Windows visual (class: DirectColor, depth: 24).
	   Substituting default (class: TrueColor, Depth: 16).
	  
	  So the decomposed= went out and asked the xserver if it supported the
	  direct color visual (which it didn't).

It looks like idl supports 8bit and 24 bit visuals, but not 16 bit visuals...
;
; testing
;
vis    decomposed  lutcold\
dir24  1           ldcolph  .. plot,x,col=1 ok, col=2 no plot
dir24  2           ldcolph  .. plot,x,col=1 ok, col=2 no plot


if i set dircectcol=24, decomposed=1, then things seem to
 work for plotting and for images. the only problem is that
 the xloadct widget only shifts colors when cursor is in the colorbar

 colors need be specified as:
 r+g*256L+b*256^2  rather than by index..

 xloadct

 loads lut as 24bit truecolor...
