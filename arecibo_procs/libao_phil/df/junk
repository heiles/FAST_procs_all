plot,coef

coef=dfgetcoefdat(/complex,len=512)

a=fft(coef)/64
plot,abs(a)^2
plot,imaginary(a)
th=atan(imaginary(a),float(a))*!radeg
;

bb=abs(a)^2
bb=bb/max(bb)
bb=alog10(bb)*10.
;
;
spc=dfgetspcdat(/db)
plot,spc
oplot,bb,color=2
nchn=128
spc=dfhbfilter(nchn)
pscol,'hbfiltercompare.ps'
plot,bb[0:255],psym=-2,xtitle='chn',ytitle='db',$
title='halfband fitler shape. from paper(red) and computed (*)'
oplot,dbit(spc,minval=1d-100),color=2
hardcopy
x


nchn=1024
norm=1
hor,0,1023
spc3=dfhbfilter(nchn,norm=norm,cascade=3)
spc3f=dfhbfilter(nchn,norm=norm,cascade=3,/fold)
plot,spc3 
oplot,spc3f,color=2

off=0
plot ,dbit(spc1,minval=1d-100)
oplot,dbit(spc2,minval=1d-100)+1*off,color=2
oplot,dbit(spc3,minval=1d-100)+2*off,color=3
oplot,dbit(spc4,minval=1d-100)+3*off,color=4
oplot,dbit(spc9,minval=1d-100)+4*off,color=5
plot,spc1-spc9
;
; try interpolating the
;
; 1. get the real coef. 2048 long
; 2. shift it to the center to get rid of edge affects
; 3. interpolate by:
;	 a. make twice as long, alternate zeros
;	 b. convol the fir filter with this value
; 4. grab the even, odd elements of the interpolated series
; 5. convert to complex (0 the real part)
; 6. compute the spectra
;    
;      1024 channels 512 df flipped
;
; interpolate teh 

max=2^18.d
coef=dfgetcoefdat(len=2048)
coef=shift(coef,1024)
intpcoef=dfinterpol(coef/max)
intpcoef=reform(intpcoef,2,2048)
coef1=reform(intpcoef[0,*])
coef2=reform(intpcoef[1,*])
plot,shift(coef,16),psym=-1 
oplot,coef1,color=2,psym=-1
oplot,coef2,color=3,psym=-1
coef=dcomplex(coef)
coef1=dcomplex(coef1)
coef2=dcomplex(coef2)

a =fft(coef)
a1=fft(coef1)
a2=fft(coef2)
plot,abs(a)
oplot,abs(a1),color=2
oplot,abs(a2),color=3
;
plot,(abs(a)-abs(a1))/256
plot,abs(a)-abs(a2)

